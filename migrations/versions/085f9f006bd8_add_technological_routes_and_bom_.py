"""Add technological routes and BOM management models

Revision ID: 085f9f006bd8
Revises: d7a5e1a6bc91
Create Date: 2025-07-03 18:11:21.090059

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '085f9f006bd8'
down_revision = 'd7a5e1a6bc91'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('archives',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('entity_type', sa.String(length=50), nullable=False),
    sa.Column('entity_id', sa.Integer(), nullable=False),
    sa.Column('entity_data', sa.Text(), nullable=False),
    sa.Column('reason', sa.String(length=50), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('archived_by', sa.Integer(), nullable=False),
    sa.Column('archived_at', sa.DateTime(), nullable=False),
    sa.Column('related_archives', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['archived_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('operations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('operation_code', sa.String(length=50), nullable=False),
    sa.Column('operation_type', sa.String(length=50), nullable=False),
    sa.Column('setup_time', sa.Float(), nullable=False),
    sa.Column('operation_time', sa.Float(), nullable=False),
    sa.Column('required_equipment', sa.Text(), nullable=True),
    sa.Column('required_skills', sa.Text(), nullable=True),
    sa.Column('quality_requirements', sa.Text(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('operations', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_operations_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_operations_operation_code'), ['operation_code'], unique=True)

    op.create_table('technological_routes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('route_number', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('route_data', sa.Text(), nullable=True),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('estimated_duration', sa.Float(), nullable=True),
    sa.Column('complexity_level', sa.String(length=20), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('technological_routes', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_technological_routes_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_technological_routes_route_number'), ['route_number'], unique=True)

    op.create_table('bom_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('part_number', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(length=20), nullable=False),
    sa.Column('material_type', sa.String(length=50), nullable=True),
    sa.Column('cost_per_unit', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('is_assembly', sa.Boolean(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('technological_route_id', sa.Integer(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['bom_items.id'], ),
    sa.ForeignKeyConstraint(['technological_route_id'], ['technological_routes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('bom_items', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_bom_items_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_bom_items_part_number'), ['part_number'], unique=False)

    op.create_table('route_operations',
    sa.Column('route_id', sa.Integer(), nullable=False),
    sa.Column('operation_id', sa.Integer(), nullable=False),
    sa.Column('sequence_number', sa.Integer(), nullable=False),
    sa.Column('is_parallel', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['operation_id'], ['operations.id'], ),
    sa.ForeignKeyConstraint(['route_id'], ['technological_routes.id'], ),
    sa.PrimaryKeyConstraint('route_id', 'operation_id')
    )
    op.create_table('route_versions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('route_id', sa.Integer(), nullable=False),
    sa.Column('version_number', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('route_data', sa.Text(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['route_id'], ['technological_routes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bom_versions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('bom_item_id', sa.Integer(), nullable=False),
    sa.Column('version_number', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('bom_data', sa.Text(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['bom_item_id'], ['bom_items.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('bom_versions')
    op.drop_table('route_versions')
    op.drop_table('route_operations')
    with op.batch_alter_table('bom_items', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_bom_items_part_number'))
        batch_op.drop_index(batch_op.f('ix_bom_items_name'))

    op.drop_table('bom_items')
    with op.batch_alter_table('technological_routes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_technological_routes_route_number'))
        batch_op.drop_index(batch_op.f('ix_technological_routes_name'))

    op.drop_table('technological_routes')
    with op.batch_alter_table('operations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_operations_operation_code'))
        batch_op.drop_index(batch_op.f('ix_operations_name'))

    op.drop_table('operations')
    op.drop_table('archives')
    # ### end Alembic commands ###
